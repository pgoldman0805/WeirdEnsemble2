@model WeirdEnsemble2.Models.Product

@{
    ViewBag.Title = Model.Brand + " " + Model.Name;

    var quantity = (new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }).Select(x => new SelectListItem
    {
        Text = x.ToString(),
        Value = x.ToString()
    });
    var formattedDollars = String.Format("{0:#,##0.##}", Model.ListPrice);
}
@if (TempData.ContainsKey("AddedReview"))
{
    <div class="alert alert-success">
        @TempData["AddedReview"]
    </div>
}
@if (TempData.ContainsKey("UnauthorizedReview"))
{
    <div class="alert alert-warning">
        @TempData["UnauthorizedReview"]
    </div>
}

<h2 class="text-center details-title page-title">@(Model.Brand + " " + Model.Name)</h2>
<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
        @if (Model.ProductImages.Any())
        {
            @*<img class="product-image img-responsive" src="@(Model.ProductProductImages.FirstOrDefault(m => m.Primary).ProductImage.ImagePath)" alt="@Model.ProductProductImages.FirstOrDefault(m => m.Primary).ProductImage.AlternateText"/>*@
            @*TODO: INSERT REMAINING NON-PRIMARY IMAGES*@
            <img class="product-image img-responsive" src="@(Model.ProductImages.FirstOrDefault(m => m.ProductID == Model.Id).ImagePath)"
                 alt="@(Model.ProductImages.FirstOrDefault(m => m.ProductID == Model.Id).AlternateText)" />
        }

        
    </div>
    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
        <div class="price-container">
            <span class="dollar-sign">$</span>
            <span class="dollars">@(formattedDollars.Split('.')[0])</span>
            <span class="cents">.@(Model.ListPrice.ToString().Split('.')[1].Substring(0, 2))</span>
        </div>
        <div class="desc-container">
            <p>@Model.Description</p>
        </div>
        @using (Html.BeginForm("Detail", "Product", FormMethod.Post, new { @class = "form-inline" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.DateCreated)
            <label for="quantity">Quantity:  </label>
            @Html.DropDownList("Quantity",quantity,new { @class = "form-control"})
            <button class="btn btn-success pull-right detail-button">Add To Cart</button>
        }
        <br />
        <div class="row">
            @*<div class="col-md-4">
                <div class="price-container">
                    <span class="dollar-sign">$</span>
                    <span class="dollars">@(formattedDollars.Split('.')[0])</span>
                    <span class="cents">.@(Model.ListPrice.ToString().Split('.')[1].Substring(0, 2))</span>
                </div>
            </div>*@
            <div class="col-md-12">
                @Html.ActionLink("Add a Review", "Review", new { id = Model.Id }, new { @class = "btn btn-default review-button btn-block", })
            </div>
            <div class="col-md-12">
                @if (Model.ProductReviews.Count > 0)
                {
                    <br /><br />
                    <button id="review-button" class="accordion">Reviews</button>
                    <div class="panel review-container">
                        @foreach (var review in Model.ProductReviews)
                        {
                            @Html.Partial("_DetailReview", review)
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@*<div class="row">
    <div class="col-md-8 col-md-offset-2">
        @if (Model.ProductReviews.Count > 0)
        {
            <br /><br />
                    <button id="review-button" class="accordion">Reviews</button>
                    <div class="panel review-container">
                        @foreach (var review in Model.ProductReviews)
                        {
                            @Html.Partial("_DetailReview", review)
                        }
                    </div>
        }
    </div>
</div>*@

<br />


<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].onclick = function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.maxHeight) {
                panel.style.maxHeight = null;
            } else {
                panel.style.maxHeight = panel.scrollHeight + "px";
            }
        }
    }
</script>