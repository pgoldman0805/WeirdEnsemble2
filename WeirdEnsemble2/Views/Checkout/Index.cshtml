@model WeirdEnsemble2.Models.CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
    var months = (new[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }).Select(x => new SelectListItem { Text = x, Value = x });
    var yearsInt = new int[6];
    int currentYear = DateTime.Now.Year;
    for (int i = 0; i < 6; i++)
    {
        yearsInt[i] = currentYear + i;
    }
    var years = yearsInt.Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() });


    List<SelectListItem> states = new List<SelectListItem>()
    {
        new SelectListItem() {Text="Alabama", Value="AL"},
        new SelectListItem() { Text="Alaska", Value="AK"},
        new SelectListItem() { Text="Arizona", Value="AZ"},
        new SelectListItem() { Text="Arkansas", Value="AR"},
        new SelectListItem() { Text="California", Value="CA"},
        new SelectListItem() { Text="Colorado", Value="CO"},
        new SelectListItem() { Text="Connecticut", Value="CT"},
        new SelectListItem() { Text="District of Columbia", Value="DC"},
        new SelectListItem() { Text="Delaware", Value="DE"},
        new SelectListItem() { Text="Florida", Value="FL"},
        new SelectListItem() { Text="Georgia", Value="GA"},
        new SelectListItem() { Text="Hawaii", Value="HI"},
        new SelectListItem() { Text="Idaho", Value="ID"},
        new SelectListItem() { Text="Illinois", Value="IL"},
        new SelectListItem() { Text="Indiana", Value="IN"},
        new SelectListItem() { Text="Iowa", Value="IA"},
        new SelectListItem() { Text="Kansas", Value="KS"},
        new SelectListItem() { Text="Kentucky", Value="KY"},
        new SelectListItem() { Text="Louisiana", Value="LA"},
        new SelectListItem() { Text="Maine", Value="ME"},
        new SelectListItem() { Text="Maryland", Value="MD"},
        new SelectListItem() { Text="Massachusetts", Value="MA"},
        new SelectListItem() { Text="Michigan", Value="MI"},
        new SelectListItem() { Text="Minnesota", Value="MN"},
        new SelectListItem() { Text="Mississippi", Value="MS"},
        new SelectListItem() { Text="Missouri", Value="MO"},
        new SelectListItem() { Text="Montana", Value="MT"},
        new SelectListItem() { Text="Nebraska", Value="NE"},
        new SelectListItem() { Text="Nevada", Value="NV"},
        new SelectListItem() { Text="New Hampshire", Value="NH"},
        new SelectListItem() { Text="New Jersey", Value="NJ"},
        new SelectListItem() { Text="New Mexico", Value="NM"},
        new SelectListItem() { Text="New York", Value="NY"},
        new SelectListItem() { Text="North Carolina", Value="NC"},
        new SelectListItem() { Text="North Dakota", Value="ND"},
        new SelectListItem() { Text="Ohio", Value="OH"},
        new SelectListItem() { Text="Oklahoma", Value="OK"},
        new SelectListItem() { Text="Oregon", Value="OR"},
        new SelectListItem() { Text="Pennsylvania", Value="PA"},
        new SelectListItem() { Text="Rhode Island", Value="RI"},
        new SelectListItem() { Text="South Carolina", Value="SC"},
        new SelectListItem() { Text="South Dakota", Value="SD"},
        new SelectListItem() { Text="Tennessee", Value="TN"},
        new SelectListItem() { Text="Texas", Value="TX"},
        new SelectListItem() { Text="Utah", Value="UT"},
        new SelectListItem() { Text="Vermont", Value="VT"},
        new SelectListItem() { Text="Virginia", Value="VA"},
        new SelectListItem() { Text="Washington", Value="WA"},
        new SelectListItem() { Text="West Virginia", Value="WV"},
        new SelectListItem() { Text="Wisconsin", Value="WI"},
        new SelectListItem() { Text="Wyoming", Value="WY"}
    };


}
@*@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
}*@

<h2 class="text-center page-title">Checkout</h2>

<table class="table table-striped checkout-table">
    <thead>
        <tr>
            <th></th>
            <th>Name</th>
            <th>List Price</th>
            <th>Quantity</th>
            <th>Item Total</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CurrentCart.CartItems)
        {
            <tr>
                <td>
                    @using (Html.BeginForm("Index", "Cart", new { prodId = item.ProductId }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <button class="btn btn-danger">Remove</button>
                    }
                </td>
                <td>@item.Product.Name</td>
                <td>@((item.Product.ListPrice ?? 0).ToString("C"))</td>
                <td>@item.Quantity</td>
                <td>@((item.Quantity * (item.Product.ListPrice ?? 0)).ToString("C"))</td>
            </tr>
        }
        
    </tbody>
    <tfoot>
        <tr class="checkout-price-row">
            <td colspan="3"></td>
            <td><strong>Subtotal:</strong></td>
            <td><strong>@((Model.CurrentCart.CartItems.Sum(x => x.Quantity * x.Product.ListPrice) ?? 0).ToString("C"))</strong></td>
        </tr>
    </tfoot>
</table>
<hr />

@using (Html.BeginForm("Index","Checkout",FormMethod.Post,new { @class ="checkout-form"}))
{
    @Html.AntiForgeryToken()

    <div class="checkout-info-container row">
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading text-center">Contact Information</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LastName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmailAddress, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EmailAddress)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber)
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="panel panel-default">
                <div class="panel-heading text-center">Shipping Information</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.ShippingRecipient, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.ShippingRecipient, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ShippingRecipient)
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ShippingAddressLine1, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.ShippingAddressLine1, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShippingAddressLine1)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ShippingAddressLine2, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.ShippingAddressLine2, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShippingAddressLine2)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ShippingCity, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.ShippingCity, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShippingCity)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ShippingState, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ShippingState, states, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShippingState)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(m => m.ShippingPostalCode, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.ShippingPostalCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShippingPostalCode)
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row text-center checkout-validate-button-row">
                    <button name="validateshipping" id="validateshipping" class="btn btn-warning">Validate Address</button>
                </div>
            </div>
        </div>

        <div class="col-md-6 col-md-offset-3">
            <div class="panel panel-default">
                <div class="panel-heading text-center">Payment Information</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CreditCardHolder, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.CreditCardHolder, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CreditCardHolder)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.CreditCardNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(m => m.CreditCardNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CreditCardNumber)
                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div class="form-group">
                                @*<label for="CreditCardExpirationMonth" class="control-label">Expiration Month</label>*@
                                @Html.LabelFor(m => m.CreditCardExpirationMonth, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.CreditCardExpirationMonth, months, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.CreditCardExpirationMonth)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @*<label for="CreditCardExpirationYear" class="control-label">Expiration Year</label>*@

                                @Html.LabelFor(m => m.CreditCardExpirationYear, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.CreditCardExpirationYear, years, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.CreditCardExpirationYear)
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @*<label for="CreditCardVerificationValue" class="control-label">Security Code</label>*@

                                @Html.LabelFor(m => m.CreditCardVerificationValue, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.CreditCardVerificationValue, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.CreditCardVerificationValue)
                            </div>
                        </div>
                    </div>

                    



                    <input type="submit" value="Complete Checkout" class="btn btn-success btn-block" />
                </div>
            </div>
        </div>


        
    </div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Address Validation</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-4">
                            <div class="well">
                                <dl class="address">
                                    <dt>@Html.LabelFor(x => x.ShippingAddressLine1)</dt>
                                    <dd class="address1"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingAddressLine2)</dt>
                                    <dd class="address2"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingCity)</dt>
                                    <dd class="city"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingState)</dt>
                                    <dd class="state"></dd>
                                    <dt>@Html.LabelFor(x => x.ShippingPostalCode)</dt>
                                    <dd class="zip"></dd>
                                    <dt>Selected</dt>
                                    <dd><input type="radio" name="shipping" /></dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="addressSave">Save changes</button>
                </div>
            </div>
        </div>
    </div>


}

@section Scripts{
    <script type="text/javascript">
    $(document).ready(function () {
        $('#validateshipping').click(function (event) {
            var street1 = $('#ShippingAddressLine1').val();
            var street2 = $('#ShippingAddressLine2').val();
            var city = $('#ShippingCity').val();
            var state = $('#ShippingState').val();
            var zip = $('#ShippingPostalCode').val();
            $.post("/Account/ValidateAddress",
                {
                    street1: street1,
                    street2: street2,
                    locality: city,
                    region: state,
                    postalCode: zip
                }).done(function (data) {
                    //console.log(data);
                    $('.address1').text(street1);
                    $('.address2').text(street2);
                    $('.city').text(city);
                    $('.state').text(state);
                    $('.zip').text(zip);
                    var addressTemplate = $('dl.address').parent().parent();
                    var addressContainer = addressTemplate.parent();
                    for (var i = 0; i < data.length; i++) {
                        var clone = addressTemplate.clone();
                        clone.find('.address1').text(data[i].Street);
                        clone.find('.address2').text(data[i].Street2);
                        clone.find('.city').text(data[i].City);
                        clone.find('.state').text(data[i].State);
                        clone.find('.zip').text(data[i].ZipCode);
                        clone.appendTo(addressContainer);
                    }
                    $('#myModal').modal('toggle');
                    console.log(data);
                });
            event.preventDefault();
            return false;
        });
        $('#addressSave').click(function (event) {
            var selectedAddress = $('input[name=shipping]:checked').parent().parent();
            $('#ShippingAddressLine1').val(selectedAddress.children(".address1").text());
            $('#ShippingAddressLine2').val(selectedAddress.children(".address2").text());
            $('#ShippingCity').val(selectedAddress.children(".city").text());
            $('#ShippingState').val(selectedAddress.children(".state").text());
            $('#ShippingPostalCode').val(selectedAddress.children(".zip").text());
            $('#myModal').modal('toggle');
        });
        $('.input-validation-error').parents('.form-group').addClass('has-error');
        $('.field-validation-error').addClass('text-danger');
        //$.post("/checkout/countries", {}, function (result) {
        //    $("#ShippingCountry").append($("<option>", { value: "", text: "" }));
        //    $(result).each(function () {
        //        $("#ShippingCountry").append($("<option>", { value: this.Value, text: this.Text }));
        //    });
        //});
        //$('#ShippingCountry').trigger("chosen:updated");
        //$("#ShippingCountry").change(function () {
        //    $("#ShippingState").empty();
        //    $.post("/checkout/states", { country: this.value }, function (result) {
        //        if (result.length === 0) {
        //            $("#ShippingState").parents('.form-group').hide();
        //        } else {
        //            $("#ShippingState").parent('.form-group').show();
        //        }
        //        $("#ShippingState").append($("<option>", { value: "", text: "" }));
        //        $(result).each(function () {
        //            $("#ShippingState").append($("<option>", { value: this.Value, text: this.Text }));
        //        });
        //        $('#ShippingState').trigger("chosen:updated");
        //    });
        //});
    });
    </script>
}